#!/bin/bash

cd /tmp

#include function script
. /tmp/ci/function

# disable ccache upload if rom compilation was successful
if [ ! -e out/target/product/$device/*$device*2022*zip ]; then

# First compress in with pigz in a single zip.
time com ccache 1 # Compression level 1, its enough

# Now split into parts.
7za a -tzip -v2048m -mx=0 ${rom}_ccache_backup.zip ccache.tar.gz

# Move all parts to our gitlab ccache_repo of for pushing
mv *.zip.002 /tmp/$rom

echo "|| Uploading CCACHE ||"
SECONDS=0
cd /tmp/$rom
upload_ccache
tg "Cache was Uploaded Successfully!
Time Took: $(($SECONDS / 60)) minute(s) and $(($SECONDS % 60)) second(s).
Status: $status | Build No: $build_no"

# lets compile again as rom isn't ready yet
git clone $github_repo $rom && cd $rom
git commit -sm "SH*T, HERE WE GO AGAIN $new_build_no
* Empty Commit To Re-Start The Build" --allow-empty
git push -f
tg "Started New Build as Rom isn't Compiled
Status: https://cirrus-ci.com | Build No: $new_build_no"

else

git clone $github_repo $rom && cd $rom
git reset --hard HEAD~$build_no
git push # new change made by you will get removed if force pushed so let's just reset when commits are empty

fi

# clean storage
rm -rf /tmp/*